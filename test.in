% PICK UP A BIG RED BLOCK.
holding(big red block)!

% GRASP THE PYRAMID.
holding(that pyramid)!

% FIND A BLOCK WHICH IS TALLER THAN THE ONE YOU ARE HOLDING AND PUT IT INTO THE BOX.
block tall.holding?
on(that, box)!

on(blue pyramid, box)!

% WHAT DOES THE BOX CONTAIN?
above.box?

% WHAT IS THE PYRAMID SUPPORTED BY?
supports[that pyramid]?

% HOW MANY BLOCKS ARE NOT IN THE BOX?
block ~above.box?

% IS AT LEAST ONE OF THEM NARROWER THAN THE ONE WHICH I TOLD YOU TO PICK UP?
that narrow.history$goal$holding?

% IS IT SUPPORTED?
supports.that?

% CAN THE TABLE PICK UP BLOCKS?
#any(table action$pickup.block)?

% CAN A PYRAMID BE SUPPORTED BY A BLOCK?
#any(pyramid action$put_on.block)?

% CAN A PYRAMID SUPPORT A PYRAMID?
#any(pyramid action$put_on.pyramid)?

% STACK UP TWO PYRAMIDS.
on(pyramid, pyramid)!

% WILL YOU PLEASE STACK UP BOTH OF THE RED BLOCKS AND EITHER A GREEN CUBE OR A PYRAMID?
stack(red block, red block, green cube | pyramid)!

% WHICH CUBE IS SITTING ON THE TABLE?
cube on.table?

% IS THERE A LARGE BLOCK BEHIND A PYRAMID?
large block behind.pyramid?

on(red pyramid, green cube)!

% PUT A SMALL ONE ONTO THE GREEN CUBE WHICH SUPPORTS A PYRAMID.
on(small block, green cube supports.pyramid)!

% PUT THE LITTLEST PYRAMID ON TOP OF IT.
on(#most(little, pyramid), that)!

% DOES THE SHORTEST THING THE TALLEST PYRAMID'S SUPPORT SUPPORTS SUPPORT ANYTHING GREEN?
green on.#most(short, on.supports.#most(tall, pyramid))?

% WHAT COLOR IS IT?
colour.supports.that?

% HOW MANY THINGS ARE ON TOP OF GREEN CUBES?
above[green cube]?

% HAD YOU TOUCHED ANY PYRAMID BEFORE YOU PUT THE GREEN ONE ON THE LITTLE CUBE?
pickup.pyramid before.goal.on(green pyramid, little cube)?

that pickup.green?

% WHEN DID YOU PICK IT UP?
event during'.that?

% WHY?
why.that.2?

that pickup.cube?

% WHY DID YOU DO THAT?
why.that?
why.that?
why.that?
why.that?
why.that?

% HOW DID YOU DO IT?
event during.that?

% HOW MANY OBJECTS DID YOU TOUCH WHILE YOU WERE DOING IT?
#count(pickup.object during.that.2)?

% WHAT DID THE RED CUBE SUPPORT BEFORE YOU STARTED TO CLEAN IT OFF?
on[red cube; just_before.cleanoff[red cube]]?

% THERE WERE FIVE BLOCKS TO THE LEFT OF THE BOX THEN.
block left_of[box; just_before.cleanoff[red cube]]?
#count(that)?

on(blue block, box)!

% PUT THE BLUE PYRAMID ON THE BLOCK IN THE BOX.
on(blue pyramid, block above.box)!

% IS THERE ANYTHING WHICH IS BIGGER THAN EVERY PYRAMID BUT IS NOT AS WIDE AS THE THING THAT SUPPORTS IT?
object #each(big, pyramid) X wide'.supports.X?

% A "STEEPLE" IS A STACK WHICH CONTAINS TWO GREEN CUBES AND A PYRAMID.
:def steeple$stack(green cube, green cube, pyramid).

% ARE THERE ANY STEEPLES NOW?
#any(steeple holds.now)?

% BUILD ONE.
steeple!

% CALL THE BIGGEST BLOCK "SUPERBLOCK".
:def superblock(#most(big, block)).

% HAVE YOU PICKED SUPERBLOCK UP SINCE WE BEGAN?
#any(superblock picked_up)?

% WHY DID YOU DROP IT?
why.put_on(superblock, table)?

left_of(red pyramid, box)!

% IS THERE ANYTHING TO THE RIGHT OF THE RED PYRAMID?
right_of[red pyramid]?

thanks.
