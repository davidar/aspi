>>> #some tiny disk | small disk big[tiny disk] | big disk big[small disk] | huge disk big[big disk].
--> describe(object1, tiny, disk).
    tiny(object1).
    disk(object1).
    describe(object2, small, disk).
    small(object2).
    disk(object2).
    big(object2,A) :- tiny(A), disk(A).
    describe(object3, big, disk).
    big(object3).
    disk(object3).
    big(object3,B) :- small(B), disk(B).
    describe(object4, huge, disk).
    huge(object4).
    disk(object4).
    big(object4,C) :- big(C), disk(C).
understood.

>>> 
>>> big(A,C): big(A,B), big(B,C).
--> big(MuA,MuC) :- big(MuA,MuB), big(MuB,MuC).
understood.

>>> small(A,B): big(B,A).
--> small(MuA,MuB) :- big(MuB,MuA).
understood.

>>> 
>>> #some left peg | middle peg | right peg.
--> describe(object5, left, peg).
    left(object5).
    peg(object5).
    describe(object6, middle, peg).
    middle(object6).
    peg(object6).
    describe(object7, right, peg).
    right(object7).
    peg(object7).
understood.

>>> 
>>> #fluent on(A,B).
--> on(MuA,MuB) :- holds(on(MuA,MuB)).
understood.

>>> #fluent on_same(D,E): on(D,P), on(E,P).
--> on_same(MuD,MuE) :- holds(on_same(MuD,MuE)).
    holds(on_same(MuD,MuE), Time) :- holds(on(MuD,MuP), Time), holds(on(MuE,MuP), Time).
understood.

>>> 
>>> init: on(disk, left peg).
--> init(C) :- disk(A), left(B), peg(B), C = on(A,B).
understood.

>>> 
>>> move(disk D, peg P) :: action demands_not.on(disk small.D, P) demands_not.on_same(D, disk small.D) deletes.on(D, peg) adds.on(D, P) costs.1.
--> action(C) :- disk(A), A = MuD, peg(B), B = MuP, C = move(A,B).
    demands_not(C,E) :- disk(D), small(D,MuD), E = on(D,MuP), disk(A), A = MuD, peg(B), B = MuP, C = move(A,B).
    demands_not(C,G) :- disk(F), small(F,MuD), G = on_same(MuD,F), disk(A), A = MuD, peg(B), B = MuP, C = move(A,B).
    deletes(C,I) :- peg(H), I = on(MuD,H), disk(A), A = MuD, peg(B), B = MuP, C = move(A,B).
    adds(C,on(MuD,MuP)) :- disk(A), A = MuD, peg(B), B = MuP, C = move(A,B).
    costs(C,1) :- disk(A), A = MuD, peg(B), B = MuP, C = move(A,B).
understood.

>>> 
>>> on(disk, right peg)!
--> goal(C) :- disk(A), right(B), peg(B), C = on(A,B).
cost: 15.
move(tiny disk, middle peg)!
move(small disk, right peg)!
move(tiny disk, right peg)!
move(big disk, middle peg)!
move(tiny disk, left peg)!
move(small disk, middle peg)!
move(tiny disk, middle peg)!
move(huge disk, right peg)!
move(tiny disk, right peg)!
move(small disk, left peg)!
move(tiny disk, left peg)!
move(big disk, right peg)!
move(tiny disk, middle peg)!
move(small disk, right peg)!
move(tiny disk, right peg)!

>>> thanks.
YOU'RE WELCOME!
