>>> #enum disk: tiny | small | big | huge.
--> describe(disk(1), tiny).
    disk(disk(1)).
    tiny(disk(1)).
    describe(disk(2), small).
    disk(disk(2)).
    small(disk(2)).
    describe(disk(3), big).
    disk(disk(3)).
    big(disk(3)).
    describe(disk(4), huge).
    disk(disk(4)).
    huge(disk(4)).
understood.

>>> #enum peg: left | middle | right.
--> describe(peg(1), left).
    peg(peg(1)).
    left(peg(1)).
    describe(peg(2), middle).
    peg(peg(2)).
    middle(peg(2)).
    describe(peg(3), right).
    peg(peg(3)).
    right(peg(3)).
understood.

>>> #fluent on(A,B).
--> on(MuA,MuB) :- holds(on(MuA,MuB)).
understood.

>>> #fluent on_same(D,E): on(D,P), on(E,P).
--> on_same(MuD,MuE) :- holds(on_same(MuD,MuE)).
    holds(on_same(MuD,MuE), Time) :- holds(on(MuD,MuP), Time), holds(on(MuE,MuP), Time).
understood.

>>> 
>>> small(disk disk(I), disk disk(>I)).
--> small(A,C) :- disk(A), A = disk(MuI), disk(C), B > MuI, C = disk(B).
understood.

>>> 
>>> init: on(disk, left peg).
--> init(C) :- disk(A), left(B), peg(B), C = on(A,B).
understood.

>>> 
>>> move(disk D, peg P) :: action demands_not.on(disk small.D, P) demands_not.on_same(D, disk small.D) deletes.on(D, peg) adds.on(D, P) costs.1.
--> action(C) :- disk(A), A = MuD, peg(B), B = MuP, C = move(A,B).
    demands_not(C,E) :- disk(D), small(D,MuD), E = on(D,MuP), disk(A), A = MuD, peg(B), B = MuP, C = move(A,B).
    demands_not(C,G) :- disk(F), small(F,MuD), G = on_same(MuD,F), disk(A), A = MuD, peg(B), B = MuP, C = move(A,B).
    deletes(C,I) :- peg(H), I = on(MuD,H), disk(A), A = MuD, peg(B), B = MuP, C = move(A,B).
    adds(C,on(MuD,MuP)) :- disk(A), A = MuD, peg(B), B = MuP, C = move(A,B).
    costs(C,1) :- disk(A), A = MuD, peg(B), B = MuP, C = move(A,B).
understood.

>>> 
>>> on(disk, right peg)!
--> goal(C) :- disk(A), right(B), peg(B), C = on(A,B).
cost: 15.
move(tiny, middle)!
move(small, right)!
move(tiny, right)!
move(big, middle)!
move(tiny, left)!
move(small, middle)!
move(tiny, middle)!
move(huge, right)!
move(tiny, right)!
move(small, left)!
move(tiny, left)!
move(big, right)!
move(tiny, middle)!
move(small, right)!
move(tiny, right)!

>>> thanks.
YOU'RE WELCOME!
