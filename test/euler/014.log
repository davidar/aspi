>>> % 14. Find the longest Collatz sequence using a starting number under ten.
>>> collatz[N even n3]: N / 2.
--> collatz(A,MuN/2) :- A = MuN, even(A), nondet_int_in_range(1,999,A).
understood.

>>> collatz[N odd n3]: (3*N) + 1.
--> collatz(A,(3*MuN)+1) :- A = MuN, odd(A), nondet_int_in_range(1,999,A).
understood.

>>> #mode collatz_steps(in,out).
>>> #pragma memo(collatz_steps/2).
>>> collatz_steps.1: 0.
--> collatz_steps(1,0).
understood.

>>> collatz_steps[N (> 1) n3]: 1 + collatz_steps[collatz.N].
--> collatz_steps(A,1+C) :- A = MuN, A > 1, nondet_int_in_range(1,999,A), collatz_steps(B,C), collatz(MuN,B).
understood.

>>> collatz_steps[1..10]?
--> what(B) :- collatz_steps(A,B), nondet_int_in_range(1,10,A).
that: 0 | 1 | 2 | 3 | 5 | 6 | 7 | 8 | 16 | 19.

>>> max{collatz_steps[1..10]}?
--> gather1(B) :- collatz_steps(A,B), nondet_int_in_range(1,10,A).
    what(D) :- max(C,D), solutions(gather1,C).
that: 19.

>>> 1..10 collatz_steps=that?
--> what(C) :- C = A, nondet_int_in_range(1,10,A), collatz_steps(C,B), that(B).
that: 9.

>>> thanks.
YOU'RE WELCOME!
