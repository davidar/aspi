>>> % 30. Find all the numbers that can be written as the sum of fourth powers of their digits.
>>> 
>>> #macro char.S: substring[S, 1..length.S, 1].
--> char(MuS,C) :- between(MuS,B - 1,(B + 1) - 1,C), nondet_int_in_range(1,A,B), length(MuS,A).
understood.

>>> #macro digit.N: decimal.char.show.N.
--> digit(MuN,G) :- decimal(D,G), between(A,E - 1,(E + 1) - 1,D), nondet_int_in_range(1,F,E), length(A,F), show(MuN,A).
understood.

>>> 
>>> N sum.{{(digit.N)**4}} n4?
--> gather1(MuN,J) :- pow(E,4,J), decimal(F,E), between(G,H - 1,(H + 1) - 1,F), nondet_int_in_range(1,I,H), length(G,I), show(MuN,G), L = MuN, nondet_int_in_range(1,9999,L).
    what(L) :- L = MuN, sum(K,L), sorted_solutions(gather1(MuN),K), nondet_int_in_range(1,9999,L).
that: 1 | 1634 | 8208 | 9474.

>>> thanks.
YOU'RE WELCOME!
