>>> % 21. Evaluate the sum of all amicable numbers under 1000.
>>> proper_divisor[N n3]: 1..(N-1) multiple'.N.
--> proper_divisor(B,A) :- A = MuN, A = 1 .. 999, B = 1 .. (MuN-1), (MuN \ B) = 0.
understood.

>>> aliquot[N n3]: sum{proper_divisor.N}.
--> aliquot(D,A) :- A = MuN, A = 1 .. 999, D = @sumof(C), setof((1,MuN),C).
    gather((1,MuN),B) :- proper_divisor(B,MuN), A = MuN, A = 1 .. 999.
understood.

>>> perfect(A): aliquot(A,A).
--> perfect(MuA) :- aliquot(MuA,MuA).
understood.

>>> perfect?
--> what(A) :- perfect(A).
that: 6 | 28 | 496.

>>> amicable(A,B): aliquot(A,B), aliquot(B,A), A != B.
--> amicable(MuA,MuB) :- aliquot(MuA,MuB), aliquot(MuB,MuA), MuA != MuB.
understood.

>>> amicable: amicable.n3.
--> amicable(B) :- amicable(B,A), A = 1 .. 999.
understood.

>>> amicable?
--> what(A) :- amicable(A).
that: 220 | 284.

>>> sum{amicable <1000}?
--> what(C) :- C = @sumof(B), setof((2),B).
    gather((2),A) :- amicable(A), A < 1000.
that: 504.

>>> thanks.
YOU'RE WELCOME!
