>>> % 11. What is the greatest product of four numbers on the same straight line?
>>> 
>>> grid[R,C]: csv[R,C].
--> grid(MuR,MuC,A) :- csv(MuR,MuC,A).
understood.

>>> unit: 1 | (-1).
--> unit(A) :- disjunction1(A).
    disjunction1(1).
    disjunction1(-1).
understood.

>>> line[R 1..10, C 1..10, unit I, unit J]: grid[X,Y] :- N = 0..3, X = R + (I*N), Y = C + (J*N).
--> line(B,D,E,F,H) :- B = MuR, B = A, nondet_int_in_range(1,10,A), D = MuC, D = C, nondet_int_in_range(1,10,C), unit(E), E = MuI, unit(F), F = MuJ, grid(MuX,MuY,H), MuN = G, nondet_int_in_range(0,3,G), MuX = (MuR+(MuI*MuN)), MuY = (MuC+(MuJ*MuN)).
understood.

>>> lines: {{line[R,C,I,J]}} :- R = 1..10, C = 1..10, unit(I), unit(J).
--> lines(D) :- sorted_solutions(gather1(MuC,MuI,MuJ,MuR),D), MuR = B, nondet_int_in_range(1,10,B), MuC = C, nondet_int_in_range(1,10,C), unit(MuI), unit(MuJ).
    gather1(MuC,MuI,MuJ,MuR,A) :- line(MuR,MuC,MuI,MuJ,A), MuR = B, nondet_int_in_range(1,10,B), MuC = C, nondet_int_in_range(1,10,C), unit(MuI), unit(MuJ).
understood.

>>> max{product.lines}?
--> gather2(B) :- product(A,B), lines(A).
    what(D) :- max(C,D), solutions(gather2,C).
that: 32719995.

>>> lines product=that?
--> what(B) :- lines(B), product(B,A), that(A).
that: [49, 71, 95, 99].

>>> thanks.
YOU'RE WELCOME!
