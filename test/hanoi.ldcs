#enum disk: tiny | small | big | huge.
#enum peg: left | middle | right.
#fluent on(A,B).
#fluent on_same(D,E) :- on(D,P), on(E,P).

small(disk.I, disk.(>I)).

init: on(disk, left peg).

move(disk D, peg P) :: action demands_not.on(disk small.D, P) demands_not.on_same(D, disk small.D) deletes.on(D, peg) adds.on(D, P) costs.1.

on(disk, right peg)!
